version: 0.1          # debe ser exactamente 0.1
component: build      # indica que esto es un build spec

timeoutInSeconds: 3600  # 1 h

steps:
  - type: Command
    name: Build Maven Project
    command: |
      echo "ðŸ”¨ Compilando proyecto Maven..."
      cd MtdrSpring/backend
      
      # Check Java version
      echo "Java version in build environment:"
      java -version
      
      # Set JAVA_HOME to ensure consistency
      export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))
      echo "JAVA_HOME set to: $JAVA_HOME"
      
      # Compile the project with explicit Java version
      mvn clean package spring-boot:repackage -Dmaven.compiler.source=11 -Dmaven.compiler.target=11
      
      # Verify the JAR was created
      ls -la target/*.jar

  - type: Command
    name: Login to OCIR
    command: |
      echo "ðŸ”‘ Autenticando en OCIR..."
      # Ajusta la regiÃ³n si no es mx-queretaro-1
      REGISTRY=mx-queretaro-1.ocir.io
      echo "${auth_token_ocir}" \
        | docker login $REGISTRY \
            -u "${user_ocir}" \
            --password-stdin

  - type: Command
    name: Build & Push Docker image
    command: |
      echo "ðŸ”¨ Construyendo y subiendo imagen Docker..."
      cd MtdrSpring/backend

      # Usa 'latest' si image_tag no estÃ¡ definido
      TAG=${image_tag:-latest}
      REGISTRY=mx-queretaro-1.ocir.io
      NAMESPACE=ax8nnzejeioc   
      REPO=reacttodo/xkmym/todolistapp-springboot

      # Build with simple Dockerfile
      docker build \
        -t $REGISTRY/$NAMESPACE/$REPO:$TAG \
        -f Dockerfile.simple \
        .

      # Push
      docker push $REGISTRY/$NAMESPACE/$REPO:$TAG

outputArtifacts:
  - name: todolist-image          # â‘  Identificador interno del artefacto
    type: DOCKER_IMAGE            # â‘¡ Le indica a DevOps que es una imagen Docker
    location: mx-queretaro-1.ocir.io/ax8nnzejeioc/reacttodo/xkmym/todolistapp-springboot:${image_tag}