version: 0.1
component: build
timeoutInSeconds: 7200 # Adjust as needed for all tests

env:
  variables:
    # These should be passed as parameters from the OCI DevOps pipeline
    # or discovered if possible.
    # Example: The external IP of your Kubernetes LoadBalancer service.
    APP_HOSTNAME: "140.84.179.223" # Replace with actual dynamic value/parameter
    APP_PORT: "80"                 # Replace with actual dynamic value/parameter
    APP_PROTOCOL: "http"

steps:
  - type: Command
    name: "Setup: Display Workspace and Install Node.js (if needed)"
    command: |
      echo "OCI Workspace: ${OCI_WORKSPACE_DIR}"
      ls -la ${OCI_WORKSPACE_DIR} # Should show Oracle_App_Bot

      # Example: Install Node.js 18 using nvm if not on a pre-configured image
      # curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
      # export NVM_DIR="$HOME/.nvm"
      # [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
      # nvm install 18
      # nvm use 18
      # node -v
      # npm -v
      echo "Node.js setup (if any) complete."

  - type: Command
    name: "Run Playwright E2E Tests"
    timeoutInSeconds: 1800 # Adjust timeout
    command: |
      cd "${OCI_WORKSPACE_DIR}/Oracle_App_Bot/MtdrSpring/backend/src/main/frontend"
      npm install
      # You may need to configure Playwright to use APP_HOSTNAME and APP_PORT
      # e.g., by setting an environment variable that your Playwright config reads
      # export BASE_URL=${APP_PROTOCOL}://${APP_HOSTNAME}:${APP_PORT}
      # Or by passing them directly if your test script supports it.
      # Ensure browsers are available (npx playwright install or pre-baked in image)
      # npx playwright install --with-deps 
      npm run test-e2e
    onFailure: "ABORT"

  - type: Command
    name: "Run OWASP Security Tests"
    timeoutInSeconds: 2400 # Adjust timeout
    command: |
      cd "${OCI_WORKSPACE_DIR}/Oracle_App_Bot/MtdrSpring/backend/src/main/frontend"
      # npm install might have already run in the Playwright step if it's the same package.json
      # If not, run npm install here.
      # Your OWASP ZAP script (npm run test-security) will also need to target the deployed application.
      # export TARGET_APP_URL=${APP_PROTOCOL}://${APP_HOSTNAME}:${APP_PORT}
      npm run test-security
    onFailure: "ABORT"

# Optional: Define output artifacts for test reports
outputArtifacts:
  - name: jmeter-results
    type: GENERIC_ARTIFACT
    location: "${OCI_WORKSPACE_DIR}/Oracle_App_Bot/MtdrSpring/jmeter-performance/results/" # Adjust to your actual JMeter results path
  - name: playwright-report
    type: GENERIC_ARTIFACT
    location: "${OCI_WORKSPACE_DIR}/Oracle_App_Bot/MtdrSpring/backend/src/main/frontend/playwright-report/" # Adjust path
  - name: owasp-report
    type: GENERIC_ARTIFACT
    location: "${OCI_WORKSPACE_DIR}/Oracle_App_Bot/MtdrSpring/backend/src/main/frontend/security-reports/" # Adjust path