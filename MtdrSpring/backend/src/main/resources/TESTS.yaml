---
version: 0.1
component: command
timeoutInSeconds: 7200
shell: bash
failImmediatelyOnError: true
env:
  variables:
    APP_HOSTNAME: 140.84.174.78
    APP_PORT: "80"
    APP_PROTOCOL: http
steps:
  - type: Command
    name: Setup Workspace
    command: |
      echo "OCI Workspace dir: /home/a01643269/reacttodo"
      ls -la "/home/a01643269/reacttodo"
  - type: Command
    name: Run Playwright E2E Tests
    timeoutInSeconds: 1800
    command: |
      cd "/home/a01643269/reacttodo/Oracle_App_Bot/MtdrSpring/backend/src/main/frontend"
      npm install
      npm run test-e2e
  - type: Command
    name: Run OWASP Security Tests
    timeoutInSeconds: 2400
    command: |
      cd "/home/a01643269/reacttodo/Oracle_App_Bot/MtdrSpring/backend/src/main/frontend"
      npm run test-security



apiVersion: apps/v1
kind: Deployment
metadata:
  name: todolistapp-springboot-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: todolistapp-springboot
  template:
    metadata:
      labels:
        app: todolistapp-springboot
        version: v1
    spec:
      containers:
        - name: todolistapp-springboot
          image: mx-queretaro-1.ocir.io/ax8nnzejeioc/reacttodo/xkmym/todolistapp-springboot:latest
          imagePullPolicy: Always
          env:
            - name: db_user
              value: "TODOUSER"
            - name: db_url
              value: "jdbc:oracle:thin:@reacttodoxkmym_medium?TNS_ADMIN=/mtdrworkshop/creds"
            - name: OCI_REGION
              value: "mx-queretaro-1"
            - name: dbpassword
              value: "Ci1402043005"
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: creds
              mountPath: /mtdrworkshop/creds
      restartPolicy: Always
      volumes:
        - name: creds
          secret:
            secretName: db-wallet-secret
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: todolistapp-springboot



apiVersion: apps/v1
kind: Deployment
metadata:
  name: todolistapp-springboot-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: todolistapp-springboot
  template:
    metadata:
      labels:
        app: todolistapp-springboot
        version: v1
    spec:
      containers:
        - name: todolistapp-springboot
          image: mx-queretaro-1.ocir.io/ax8nnzejeioc/reacttodo/xkmym/todolistapp-springboot:${BUILDRUN_HASH}
          imagePullPolicy: Always
          env:
            - name: db_user
              value: "TODOUSER"
            - name: db_url
              value: "jdbc:oracle:thin:@reacttodoxkmym_medium?TNS_ADMIN=/mtdrworkshop/creds"
            - name: OCI_REGION
              value: "mx-queretaro-1"
            - name: dbpassword
              value: "Ci1402043005"
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: creds
              mountPath: /mtdrworkshop/creds
      restartPolicy: Always
      volumes:
        - name: creds
          secret:
            secretName: db-wallet-secret
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: todolistapp-springboot




version: 0.1
component: command

# Fail fast on cualquier error
failImmediatelyOnError: true

steps:
  - name: Checkout springboot-bot branch
    type: Command
    command: |
      # Clona s√≥lo la rama springboot-bot en el directorio de trabajo
      git clone https://github.com/CarlosIvan14/Oracle_App_Bot.git tests


  - name: Run Playwright E2E tests
    type: Command
    command: |
      cd MtdrSpring/backend/src/main/frontend
      npm install
      npm run test-e2e

  - name: Run OWASP security tests
    type: Command
    command: |
      cd MtdrSpring/backend/src/main/frontend
      npm run test-security